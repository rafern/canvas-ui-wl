var M=Object.defineProperty;var T=Object.getOwnPropertySymbols;var E=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable;var w=(s,r,e)=>r in s?M(s,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[r]=e,P=(s,r)=>{for(var e in r||(r={}))E.call(r,e)&&w(s,e,r[e]);if(T)for(var e of T(r))I.call(r,e)&&w(s,e,r[e]);return s};import{Root as K,PointerDriver as U,DOMKeyboardDriver as V}from"@rafern/canvas-ui";import{vec3 as k,quat as H}from"gl-matrix";var O=null,C=null,D=null,n=class extends K{constructor(e,a,t,o){var p,b,f,g;o=P({pointerStyleHandler:l=>{WL.canvas.style.cursor=l},preventBleeding:!0},o);super(t,o);this.texture=null;this.mesh=null;this.oldTexSize=[0,0];this.collision=null;this.cursorTarget=null;this.valid=!1;this.keydownEventListener=null;this.keyupEventListener=null;this.unHoverFunction=null;this.moveFunction=null;this.downFunction=null;this.upFunction=null;let u=(p=o.collisionGroup)!=null?p:1,i=(b=o.registerPointerDriver)!=null?b:!0,h=(f=o.registerKeyboardDriver)!=null?f:!0;if(this.unitsPerPixel=(g=o.unitsPerPixel)!=null?g:.01,this.meshObject=WL.scene.addObject(e),this.meshObject.active=!1,u!==null&&i&&this.registerDriver(n.pointerDriver),h&&this.registerDriver(n.keyboardDriver),this.meshComponent=this.meshObject.addComponent("mesh"),this.materialClone=a.clone(),this.meshComponent.material=this.materialClone,this._setupMesh(1,0),u!==null){this.collision=this.meshObject.addComponent("collision",{collider:WL.Collider.Box,extents:[1,1,.01],group:1<<u}),this.cursorTarget=this.meshObject.addComponent("cursor-target");let l=new Float32Array(3),x=new Float32Array(3),F=new Float32Array(4),j=this.meshObject,W=m=>(l.set(m.rayHit.locations[0]),j.getTranslationWorld(x),k.sub(l,l,x),H.invert(F,j.rotationWorld),k.transformQuat(l,l,F),k.div(l,l,j.scalingWorld),[Math.min(Math.max((l[0]+1)/2,0),1),Math.min(Math.max(1-(l[1]+1)/2,0),1)]);if(i){let m=!1,v=!1,y=!1;this.keydownEventListener=c=>{c.key==="Shift"&&(m=!0),c.key==="Control"&&(v=!0),c.key==="Alt"&&(y=!0)},this.keyupEventListener=c=>{c.key==="Shift"&&(m=!1),c.key==="Control"&&(v=!1),c.key==="Alt"&&(y=!1)},WL.canvas.addEventListener("keydown",this.keydownEventListener),WL.canvas.addEventListener("keyup",this.keyupEventListener),this.unHoverFunction=(c,d)=>{n.pointerDriver.leavePointer(this,n.getPointerID(d))},this.moveFunction=(c,d)=>{n.pointerDriver.movePointer(this,n.getPointerID(d),...W(d),null,m,v,y)},this.downFunction=(c,d)=>{n.pointerDriver.movePointer(this,n.getPointerID(d),...W(d),1,m,v,y)},this.upFunction=(c,d)=>{n.pointerDriver.movePointer(this,n.getPointerID(d),...W(d),0,m,v,y)},this.cursorTarget.addUnHoverFunction(this.unHoverFunction),this.cursorTarget.addMoveFunction(this.moveFunction),this.cursorTarget.addDownFunction(this.downFunction),this.cursorTarget.addUpFunction(this.upFunction)}}this.valid=!0,this.maxCanvasWidth=2048,this.maxCanvasHeight=2048}static get pointerDriver(){return O===null&&(O=new U),O}static get keyboardDriver(){return C===null&&(C=new V,C.bindDOMElem(WL.canvas)),C}static get pointerIDs(){return D===null&&(D=new Map),D}static getPointerID(e){let a=n.pointerIDs,t=a.get(e);return typeof t=="undefined"&&(t=n.pointerDriver.registerPointer(),a.set(e,t)),t}update(){if(!this.valid)return;let e=this.meshObject;this.preLayoutUpdate();let a=this.resolveLayout(),[t,o]=this.canvasDimensions;if(a){let[i,h]=this.dimensions,[p,b]=this.effectiveScale;e.resetScaling(),e.scale([this.unitsPerPixel*i,this.unitsPerPixel*h,.01]),this.collision!==null&&(this.collision.extents=[e.scalingWorld[0],e.scalingWorld[1],.01]),this._setupMesh(p*i/t,1-b*h/o)}this.postLayoutUpdate();let u=this.paint();if(e.active=this.enabled,!!u)if(this.oldTexSize[0]!==t||this.oldTexSize[1]!==o){this.oldTexSize[0]=t,this.oldTexSize[1]=o;let i=this.materialClone,h=this.texture;this.texture=new WL.Texture(this.canvas),i.shader==="Flat Opaque Textured"||i.shader==="Flat Transparent Textured"?i.flatTexture=this.texture:i.shader=="Phong Opaque Textured"?i.diffuseTexture=this.texture:console.error("Shader",i.shader,"not supported by WLRoot"),h&&h.destroy()}else this.texture?this.texture.update():console.warn("There is no texture to update! Is the canvas dimensionless?")}_setVertex(e,a,t,o,u,i,h,p,b,f){e.set([t,o,u,b,f,i,h,p],a*WL.Mesh.VERTEX_FLOAT_SIZE)}_setUV(e,a,t,o){e.set([t,o],a*WL.Mesh.VERTEX_FLOAT_SIZE+WL.Mesh.TEXCOORD.U)}_setupMesh(e,a){let t=new Uint8Array([0,3,1,0,2,3]),o=new Float32Array(4*WL.Mesh.VERTEX_FLOAT_SIZE);this._setVertex(o,0,-1,1,0,0,0,1,0,1),this._setVertex(o,1,1,1,0,0,0,1,e,1),this._setVertex(o,2,-1,-1,0,0,0,1,0,a),this._setVertex(o,3,1,-1,0,0,0,1,e,a);let u=new WL.Mesh({indexData:t,indexType:WL.MeshIndexType.UnsignedByte,vertexData:o,vertexCount:4});this.meshComponent.mesh=u,this.mesh&&this.mesh.destroy(),this.mesh=u}destroy(){this.keydownEventListener!==null&&(WL.canvas.removeEventListener("keydown",this.keydownEventListener),this.keydownEventListener=null),this.keyupEventListener!==null&&(WL.canvas.removeEventListener("keyup",this.keyupEventListener),this.keyupEventListener=null),this.cursorTarget&&(this.unHoverFunction!==null&&(this.cursorTarget.removeUnHoverFunction(this.unHoverFunction),this.unHoverFunction=null),this.moveFunction!==null&&(this.cursorTarget.removeMoveFunction(this.moveFunction),this.moveFunction=null),this.downFunction!==null&&(this.cursorTarget.removeDownFunction(this.downFunction),this.downFunction=null),this.upFunction!==null&&(this.cursorTarget.removeUpFunction(this.upFunction),this.upFunction=null)),this.texture&&(this.texture.destroy(),this.texture=null),this.collision&&(this.collision.destroy(),this.collision=null),this.cursorTarget&&(this.cursorTarget.destroy(),this.cursorTarget=null),this.meshComponent&&(this.meshComponent.destroy(),this.meshComponent=null),this.mesh&&this.mesh.destroy(),this.meshObject&&(this.meshObject.destroy(),this.meshObject=null),this.valid=!1,super.destroy()}};import{VirtualKeyboard as S,defaultVirtualKeyboardTemplate as A,Margin as N}from"@rafern/canvas-ui";var L=class extends n{constructor(e,a,t){var u,i;let o=(u=t==null?void 0:t.keyboardDriver)!=null?u:n.keyboardDriver;super(e,a,new N(new S(o,(i=t==null?void 0:t.keyboardTemplate)!=null?i:A)),t);this.keyboardDriver=o}updateVisibility(){!this.valid||(this.enabled=this.keyboardDriver.needsInput)}};import{PointerHint as R}from"@rafern/canvas-ui";WL.registerComponent("canvas-ui-input-guard",{keyboardComponentName:{type:WL.Type.String,default:""},keyboardObject:{type:WL.Type.Object,default:null},pointerComponentName:{type:WL.Type.String,default:""},pointerObject:{type:WL.Type.Object,default:null},cursorObject:{type:WL.Type.Object,default:null}},{init(){this.pointer=null,this.pointerComponent=null,this.keyboardComponent=null},start(){if(this.keyboardComponentName!=="")if(this.keyboardObject!==null){let s=this.keyboardObject.getComponent(this.keyboardComponentName,0);s===null?console.warn("keyboardObject has no component with name",this.keyboardComponentName):this.keyboardComponent=s}else console.warn("keyboardComponentName set in canvas-ui-keyboard-guard, but keyboardObject was not");if(this.pointerComponentName!=="")if(this.pointerObject!==null){let s=this.pointerObject.getComponent(this.pointerComponentName,0);if(s===null){console.warn("pointerObject has no component with name",this.pointerComponentName);return}if(this.cursorObject!==null){let r=this.cursorObject.getComponent("cursor",0);r===null?console.warn("cursorObject set in canvas-ui-keyboard-guard, but cursorObject has no cursor component"):(this.pointer=n.getPointerID(r),this.pointerComponent=s)}else console.warn("pointerObject set in canvas-ui-keyboard-guard, but cursorObject was not")}else console.warn("pointerComponentName set in canvas-ui-keyboard-guard, but pointerObject was not")},update(s){if(this.keyboardComponent!==null){let r=!n.keyboardDriver.needsInput;this.keyboardComponent.active=r}if(this.pointer!==null&&this.pointerComponent!==null){let r=n.pointerDriver.getPointerHint(this.pointer)===R.None;this.pointerComponent.active=r}},onDeactivate(){this.keyboardComponent!==null&&(this.keyboardComponent.active=!0),this.pointerComponent!==null&&(this.pointerComponent.active=!0)}});WL.registerComponent("virtual-keyboard-ui-root",{material:{type:WL.Type.Material}},{init(){this.root=new L(this.object,this.material),this.forceDisabled=!1},update(s){this.root&&!this.forceDisabled&&(this.root.updateVisibility(),this.root.update())},onActivate(){this.root&&(this.forceDisabled=!1,this.root.enabled=!0)},onDeactivate(){this.root&&(this.forceDisabled=!0,this.root.enabled=!1)}});export{n as WLRoot,L as WLVirtualKeyboardRoot};
//# sourceMappingURL=index.esm.js.map
