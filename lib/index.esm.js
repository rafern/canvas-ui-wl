import{Root as O,PointerDriver as C,DOMKeyboardDriver as T,Theme as D}from"@rafern/canvas-ui";import{vec3 as y,quat as j}from"gl-matrix";var v=null,m=null,g=null,t=class extends O{static get pointerDriver(){return v===null&&(v=new C),v}static get keyboardDriver(){return m===null&&(m=new T,m.bindDOMElem(WL.canvas)),m}static get pointerIDs(){return g===null&&(g=new Map),g}static getPointerID(e){let n=t.pointerIDs,i=n.get(e);return typeof i=="undefined"&&(i=t.pointerDriver.registerPointer(),n.set(e,i)),i}constructor(e,n,i,s=new D,r=.01,o=1,u=!0,c=!0){if(super(i,a=>{WL.canvas.style.cursor=a},s),this.unitsPerPixel=r,this.texture=null,this.meshObject=WL.scene.addObject(e),this.meshObject.active=!1,o!==null&&u&&this.registerDriver(t.pointerDriver),c&&this.registerDriver(t.keyboardDriver),this.mesh=null,this.meshComponent=this.meshObject.addComponent("mesh"),this.materialClone=n.clone(),this.meshComponent.material=this.materialClone,this.oldTexSize=[0,0],this._setupMesh(1,0),o!==null){this.collision=this.meshObject.addComponent("collision",{collider:WL.Collider.Box,extents:[1,1,.01],group:1<<o}),this.cursorTarget=this.meshObject.addComponent("cursor-target");let a=new Float32Array(3),d=new Float32Array(3),x=new Float32Array(4),f=p=>(a.set(p.rayHit.locations[0]),this.meshObject.getTranslationWorld(d),y.sub(a,a,d),j.invert(x,this.meshObject.rotationWorld),y.transformQuat(a,a,x),y.div(a,a,this.meshObject.scalingWorld),[Math.min(Math.max((a[0]+1)/2,0),1),Math.min(Math.max(1-(a[1]+1)/2,0),1)]);u&&(this.cursorTarget.addUnHoverFunction((p,l)=>{t.pointerDriver.leavePointer(this,t.getPointerID(l))}),this.cursorTarget.addMoveFunction((p,l)=>{t.pointerDriver.movePointer(this,t.getPointerID(l),...f(l),null,!1,!1,!1)}),this.cursorTarget.addDownFunction((p,l)=>{t.pointerDriver.movePointer(this,t.getPointerID(l),...f(l),1,!1,!1,!1)}),this.cursorTarget.addUpFunction((p,l)=>{t.pointerDriver.movePointer(this,t.getPointerID(l),...f(l),0,!1,!1,!1)}))}else this.collision=null,this.cursorTarget=null;this.valid=!0,this.maxCanvasWidth=2048,this.maxCanvasHeight=2048}update(){if(!this.valid)return;this.preLayoutUpdate();let e=this.resolveLayout(),[n,i]=this.canvasDimensions;if(e){let[r,o]=this.dimensions,[u,c]=this.effectiveScale;this.meshObject.resetScaling(),this.meshObject.scale([this.unitsPerPixel*r,this.unitsPerPixel*o,.01]),this.collision!==null&&(this.collision.extents=[this.meshObject.scalingWorld[0],this.meshObject.scalingWorld[1],.01]),this._setupMesh(u*r/n,1-c*o/i)}this.postLayoutUpdate();let s=this.paint();if(this.meshObject.active=this.enabled,!!s)if(this.oldTexSize[0]!==n||this.oldTexSize[1]!==i){this.oldTexSize[0]=n,this.oldTexSize[1]=i;let r=this.materialClone,o=this.texture;this.texture=new WL.Texture(this.canvas),r.shader==="Flat Opaque Textured"||r.shader==="Flat Transparent Textured"?r.flatTexture=this.texture:r.shader=="Phong Opaque Textured"?r.diffuseTexture=this.texture:console.error("Shader",r.shader,"not supported by WLRoot"),o&&o.destroy()}else this.texture.update()}_setVertex(e,n,i,s,r,o,u,c,a,d){e.set([i,s,r,a,d,o,u,c],n*WL.Mesh.VERTEX_FLOAT_SIZE)}_setUV(e,n,i,s){e.set([i,s],n*WL.Mesh.VERTEX_FLOAT_SIZE+WL.Mesh.TEXCOORD.U)}_setupMesh(e,n){let i=new Uint8Array([0,3,1,0,2,3]),s=new Float32Array(4*WL.Mesh.VERTEX_FLOAT_SIZE);this._setVertex(s,0,-1,1,0,0,0,1,0,1),this._setVertex(s,1,1,1,0,0,0,1,e,1),this._setVertex(s,2,-1,-1,0,0,0,1,0,n),this._setVertex(s,3,1,-1,0,0,0,1,e,n);let r=new WL.Mesh({indexData:i,indexType:WL.MeshIndexType.UnsignedByte,vertexData:s});this.meshComponent.mesh=r,this.mesh&&this.mesh.destroy(),this.mesh=r}destroy(){this.texture&&(this.texture.destroy(),this.texture=null),this.collision&&(this.collision.destroy(),this.collision=null),this.cursorTarget&&(this.cursorTarget.destroy(),this.cursorTarget=null),this.meshComponent.destroy(),this.meshComponent=null,this.mesh&&this.mesh.destroy(),this.meshObject.destroy(),this.meshObject=null,super.destroy()}};import{VirtualKeyboard as w,defaultVirtualKeyboardTemplate as k,Theme as P,Margin as M}from"@rafern/canvas-ui";var b=class extends t{constructor(e,n,i=k,s=null,r=new P,o=.01,u=1,c=!0){s===null&&(s=t.keyboardDriver),super(e,n,new M(new w(s,i)),r,o,u,c,!1),this.keyboardDriver=s}updateVisibility(){!this.valid||(this.enabled=this.keyboardDriver.needsInput)}};import{PointerHint as I}from"@rafern/canvas-ui";WL.registerComponent("canvas-ui-input-guard",{keyboardComponentName:{type:WL.Type.String,default:""},keyboardObject:{type:WL.Type.Object,default:null},pointerComponentName:{type:WL.Type.String,default:""},pointerObject:{type:WL.Type.Object,default:null},cursorObject:{type:WL.Type.Object,default:null}},{init(){this.pointer=null,this.pointerComponent=null,this.keyboardComponent=null},start(){if(this.keyboardComponentName!=="")if(this.keyboardObject!==null){let h=this.keyboardObject.getComponent(this.keyboardComponentName);h===null?console.warn("keyboardObject has no component with name",this.keyboardComponentName):this.keyboardComponent=h}else console.warn("keyboardComponentName set in canvas-ui-keyboard-guard, but keyboardObject was not");if(this.pointerComponentName!=="")if(this.pointerObject!==null){let h=this.pointerObject.getComponent(this.pointerComponentName);if(h===null){console.warn("pointerObject has no component with name",this.pointerComponentName);return}if(this.cursorObject!==null){let e=this.cursorObject.getComponent("cursor");e===null?console.warn("cursorObject set in canvas-ui-keyboard-guard, but cursorObject has no cursor component"):(this.pointer=t.getPointerID(e),this.pointerComponent=h)}else console.warn("pointerObject set in canvas-ui-keyboard-guard, but cursorObject was not")}else console.warn("pointerComponentName set in canvas-ui-keyboard-guard, but pointerObject was not")},update(h){if(this.keyboardComponent!==null){let e=!t.keyboardDriver.needsInput;this.keyboardComponent.active=e}if(this.pointer!==null){let e=t.pointerDriver.getPointerHint(this.pointer)===I.None;this.pointerComponent.active=e}},onDeactivate(){this.keyboardComponent!==null&&(this.keyboardComponent.active=!0),this.pointerComponent!==null&&(this.pointerComponent.active=!0)}});WL.registerComponent("virtual-keyboard-ui-root",{material:{type:WL.Type.Material}},{init(){this.root=new b(this.object,this.material),this.forceDisabled=!1},update(h){this.root&&!this.forceDisabled&&(this.root.updateVisibility(),this.root.update())},onActivate(){this.root&&(this.forceDisabled=!1,this.root.enabled=!0)},onDeactivate(){this.root&&(this.forceDisabled=!0,this.root.enabled=!1)}});export{t as WLRoot,b as WLVirtualKeyboardRoot};
//# sourceMappingURL=index.esm.js.map
