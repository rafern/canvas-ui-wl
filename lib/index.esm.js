import{Root as D,PointerDriver as g,DOMKeyboardDriver as j,Theme as T}from"canvas-ui";import{vec3 as x}from"gl-matrix";var f=null,b=null,v=null,e=class extends D{static get pointerDriver(){return f===null&&(f=new g),f}static get keyboardDriver(){return b===null&&(b=new j,b.bindDOMElem(WL.canvas)),b}static get pointerIDs(){return v===null&&(v=new Map),v}static getPointerID(t){let s=e.pointerIDs,i=s.get(t);return typeof i=="undefined"&&(i=e.pointerDriver.registerPointer(),s.set(t,i)),i}constructor(t,s,i,r=new T,o=.01,n=1,c=!0,d=!0){super(i,h=>{WL.canvas.style.cursor=h},r);if(this.unitsPerPixel=o,this.meshObject=WL.scene.addObject(t),this.meshObject.active=!1,n!==null&&c&&this.registerDriver(e.pointerDriver),d&&this.registerDriver(e.keyboardDriver),this.mesh=this.meshObject.addComponent("mesh"),this.materialClone=s.clone(),this.mesh.material=this.materialClone,this.oldTexSize=[0,0],this._setupMesh(1,0),n!==null){this.collision=this.meshObject.addComponent("collision",{collider:WL.Collider.Box,extents:[1,1,.01],group:1<<n});let h=this.meshObject.addComponent("cursor-target"),l=new Float32Array(3),O=new Float32Array(3),m=p=>(l.set(p.rayHit.locations[0]),this.meshObject.getTranslationWorld(O),x.sub(l,l,O),x.div(l,l,this.meshObject.scalingLocal),[Math.min(Math.max((l[0]+1)/2,0),1),Math.min(Math.max(1-(l[1]+1)/2,0),1)]);c&&(h.addUnHoverFunction((p,a)=>{e.pointerDriver.leavePointer(this,e.getPointerID(a))}),h.addCursorMoveFunction((p,a)=>{e.pointerDriver.movePointer(this,e.getPointerID(a),...m(a))}),h.addCursorDownFunction((p,a)=>{e.pointerDriver.movePointer(this,e.getPointerID(a),...m(a),!0)}),h.addCursorUpFunction((p,a)=>{e.pointerDriver.movePointer(this,e.getPointerID(a),...m(a),!1)}))}else this.collision=null;this.valid=!0}update(){if(!this.valid)return;this.preLayoutUpdate();let t=this.resolveLayout(),[s,i]=this.canvasDimensions;if(t){let[o,n]=this.dimensions;this.meshObject.resetScaling(),this.meshObject.scale([this.unitsPerPixel*o,this.unitsPerPixel*n,.01]),this.collision!==null&&(this.collision.extents=[this.meshObject.scalingLocal[0],this.meshObject.scalingLocal[1],.01]),this._setupMesh(o/s,1-n/i)}this.postLayoutUpdate();let r=this.paint();if(this.meshObject.active=this.enabled,!!r)if(this.oldTexSize[0]!==s||this.oldTexSize[1]!==i){this.oldTexSize[0]=s,this.oldTexSize[1]=i;let o=this.materialClone;this.texture=new WL.Texture(this.canvas),o.shader==="Flat Opaque Textured"||o.shader==="Flat Transparent Textured"?o.flatTexture=this.texture:o.shader=="Phong Opaque Textured"?o.diffuseTexture=this.texture:console.error("Shader",o.shader,"not supported by WLRoot")}else this.texture.update()}_setVertex(t,s,i,r,o,n,c,d,h,l){t.set([i,r,o,h,l,n,c,d],s*WL.Mesh.VERTEX_FLOAT_SIZE)}_setUV(t,s,i,r){t.set([i,r],s*WL.Mesh.VERTEX_FLOAT_SIZE+WL.Mesh.TEXCOORD.U)}_setupMesh(t,s){let i=new Uint8Array([0,3,1,0,2,3]),r=new Float32Array(4*WL.Mesh.VERTEX_FLOAT_SIZE);this._setVertex(r,0,-1,1,0,0,0,1,0,1),this._setVertex(r,1,1,1,0,0,0,1,t,1),this._setVertex(r,2,-1,-1,0,0,0,1,0,s),this._setVertex(r,3,1,-1,0,0,0,1,t,s),this.mesh.mesh=new WL.Mesh({indexData:i,indexType:WL.MeshIndexType.UnsignedByte,vertexData:r})}};import{VirtualKeyboard as P,defaultVirtualKeyboardTemplate as L,Theme as w,Margin as M}from"canvas-ui";var y=class extends e{constructor(t,s,i=L,r=null,o=new w,n=.01,c=1,d=!0){r===null&&(r=e.keyboardDriver),super(t,s,new M(new P(r,i)),o,n,c,d,!1),this.keyboardDriver=r}updateVisibility(){!this.valid||(this.enabled=this.keyboardDriver.getFocusedRoot()!==null)}};import{PointerHint as I}from"canvas-ui";WL.registerComponent("canvas-ui-input-guard",{keyboardObject:{type:WL.Type.Object,default:null},pointerObject:{type:WL.Type.Object,default:null},cursorObject:{type:WL.Type.Object,default:null}},{init(){this.pointer=null},start(){if(this.pointerObject!==null){if(this.cursorObject===null){console.warn("pointerObject set in canvas-ui-keyboard-guard, but cursorObject was not");return}let u=this.cursorObject.getComponent("cursor");u===null?console.warn("cursorObject set in canvas-ui-keyboard-guard, but cursorObject has no cursor component"):this.pointer=e.getPointerID(u)}},update(u){if(this.keyboardObject!==null){let t=e.keyboardDriver.getFocusedRoot()===null;this.keyboardObject.active=t}if(this.pointer!==null){let t=e.pointerDriver.getPointerHint(this.pointer)===I.None;this.pointerObject.active=t}},onDeactivate(){this.keyboardObject!==null&&(this.keyboardObject.active=!0),this.pointerObject!==null&&(this.pointerObject.active=!0)}});WL.registerComponent("virtual-keyboard-ui-root",{material:{type:WL.Type.Material}},{init(){this.root=new y(this.object,this.material),this.forceDisabled=!1},update(u){this.root&&!this.forceDisabled&&(this.root.updateVisibility(),this.root.update())},onActivate(){this.root&&(this.forceDisabled=!1,this.root.enabled=!0)},onDeactivate(){this.root&&(this.forceDisabled=!0,this.root.enabled=!1)}});export{e as WLRoot,y as WLVirtualKeyboardRoot};
//# sourceMappingURL=index.esm.js.map
