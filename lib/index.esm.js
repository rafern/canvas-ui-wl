var L=Object.defineProperty;var w=Object.getOwnPropertySymbols;var I=Object.prototype.hasOwnProperty,W=Object.prototype.propertyIsEnumerable;var P=(o,e,t)=>e in o?L(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,M=(o,e)=>{for(var t in e||(e={}))I.call(e,t)&&P(o,t,e[t]);if(w)for(var t of w(e))W.call(e,t)&&P(o,t,e[t]);return o};import{Root as S,PointerDriver as E,DOMKeyboardDriver as F}from"@rafern/canvas-ui";import{vec3 as x,quat as V}from"gl-matrix";var C=null,v=null,O=null,r=class extends S{static get pointerDriver(){return C===null&&(C=new E),C}static get keyboardDriver(){return v===null&&(v=new F,v.bindDOMElem(WL.canvas)),v}static get pointerIDs(){return O===null&&(O=new Map),O}static getPointerID(e){let t=r.pointerIDs,i=t.get(e);return typeof i=="undefined"&&(i=r.pointerDriver.registerPointer(),t.set(e,i)),i}constructor(e,t,i,s){var d,y,f,T;s=M({pointerStyleHandler:l=>{WL.canvas.style.cursor=l},preventBleeding:!0},s),super(i,s);let n=(d=s.collisionGroup)!=null?d:1,a=(y=s.registerPointerDriver)!=null?y:!0,m=(f=s.registerKeyboardDriver)!=null?f:!0;if(this.unitsPerPixel=(T=s.unitsPerPixel)!=null?T:.01,this.texture=null,this.meshObject=WL.scene.addObject(e),this.meshObject.active=!1,n!==null&&a&&this.registerDriver(r.pointerDriver),m&&this.registerDriver(r.keyboardDriver),this.mesh=null,this.meshComponent=this.meshObject.addComponent("mesh"),this.materialClone=t.clone(),this.meshComponent.material=this.materialClone,this.oldTexSize=[0,0],this._setupMesh(1,0),n!==null){this.collision=this.meshObject.addComponent("collision",{collider:WL.Collider.Box,extents:[1,1,.01],group:1<<n}),this.cursorTarget=this.meshObject.addComponent("cursor-target");let l=new Float32Array(3),k=new Float32Array(3),j=new Float32Array(4),D=u=>(l.set(u.rayHit.locations[0]),this.meshObject.getTranslationWorld(k),x.sub(l,l,k),V.invert(j,this.meshObject.rotationWorld),x.transformQuat(l,l,j),x.div(l,l,this.meshObject.scalingWorld),[Math.min(Math.max((l[0]+1)/2,0),1),Math.min(Math.max(1-(l[1]+1)/2,0),1)]);if(a){let u=!1,p=!1,b=!1;WL.canvas.addEventListener("keydown",h=>{h.key==="Shift"&&(u=!0),h.key==="Control"&&(p=!0),h.key==="Alt"&&(b=!0)}),WL.canvas.addEventListener("keyup",h=>{h.key==="Shift"&&(u=!1),h.key==="Control"&&(p=!1),h.key==="Alt"&&(b=!1)}),this.cursorTarget.addUnHoverFunction((h,c)=>{r.pointerDriver.leavePointer(this,r.getPointerID(c))}),this.cursorTarget.addMoveFunction((h,c)=>{r.pointerDriver.movePointer(this,r.getPointerID(c),...D(c),null,u,p,b)}),this.cursorTarget.addDownFunction((h,c)=>{r.pointerDriver.movePointer(this,r.getPointerID(c),...D(c),1,u,p,b)}),this.cursorTarget.addUpFunction((h,c)=>{r.pointerDriver.movePointer(this,r.getPointerID(c),...D(c),0,u,p,b)})}}else this.collision=null,this.cursorTarget=null;this.valid=!0,this.maxCanvasWidth=2048,this.maxCanvasHeight=2048}update(){if(!this.valid)return;this.preLayoutUpdate();let e=this.resolveLayout(),[t,i]=this.canvasDimensions;if(e){let[n,a]=this.dimensions,[m,d]=this.effectiveScale;this.meshObject.resetScaling(),this.meshObject.scale([this.unitsPerPixel*n,this.unitsPerPixel*a,.01]),this.collision!==null&&(this.collision.extents=[this.meshObject.scalingWorld[0],this.meshObject.scalingWorld[1],.01]),this._setupMesh(m*n/t,1-d*a/i)}this.postLayoutUpdate();let s=this.paint();if(this.meshObject.active=this.enabled,!!s)if(this.oldTexSize[0]!==t||this.oldTexSize[1]!==i){this.oldTexSize[0]=t,this.oldTexSize[1]=i;let n=this.materialClone,a=this.texture;this.texture=new WL.Texture(this.canvas),n.shader==="Flat Opaque Textured"||n.shader==="Flat Transparent Textured"?n.flatTexture=this.texture:n.shader=="Phong Opaque Textured"?n.diffuseTexture=this.texture:console.error("Shader",n.shader,"not supported by WLRoot"),a&&a.destroy()}else this.texture.update()}_setVertex(e,t,i,s,n,a,m,d,y,f){e.set([i,s,n,y,f,a,m,d],t*WL.Mesh.VERTEX_FLOAT_SIZE)}_setUV(e,t,i,s){e.set([i,s],t*WL.Mesh.VERTEX_FLOAT_SIZE+WL.Mesh.TEXCOORD.U)}_setupMesh(e,t){let i=new Uint8Array([0,3,1,0,2,3]),s=new Float32Array(4*WL.Mesh.VERTEX_FLOAT_SIZE);this._setVertex(s,0,-1,1,0,0,0,1,0,1),this._setVertex(s,1,1,1,0,0,0,1,e,1),this._setVertex(s,2,-1,-1,0,0,0,1,0,t),this._setVertex(s,3,1,-1,0,0,0,1,e,t);let n=new WL.Mesh({indexData:i,indexType:WL.MeshIndexType.UnsignedByte,vertexData:s});this.meshComponent.mesh=n,this.mesh&&this.mesh.destroy(),this.mesh=n}destroy(){this.texture&&(this.texture.destroy(),this.texture=null),this.collision&&(this.collision.destroy(),this.collision=null),this.cursorTarget&&(this.cursorTarget.destroy(),this.cursorTarget=null),this.meshComponent.destroy(),this.meshComponent=null,this.mesh&&this.mesh.destroy(),this.meshObject.destroy(),this.meshObject=null,super.destroy()}};import{VirtualKeyboard as A,defaultVirtualKeyboardTemplate as N,Margin as U}from"@rafern/canvas-ui";var g=class extends r{constructor(e,t,i){var n,a;let s=(n=i==null?void 0:i.keyboardDriver)!=null?n:r.keyboardDriver;super(e,t,new U(new A(s,(a=i==null?void 0:i.keyboardTemplate)!=null?a:N)),i),this.keyboardDriver=s}updateVisibility(){!this.valid||(this.enabled=this.keyboardDriver.needsInput)}};import{PointerHint as _}from"@rafern/canvas-ui";WL.registerComponent("canvas-ui-input-guard",{keyboardComponentName:{type:WL.Type.String,default:""},keyboardObject:{type:WL.Type.Object,default:null},pointerComponentName:{type:WL.Type.String,default:""},pointerObject:{type:WL.Type.Object,default:null},cursorObject:{type:WL.Type.Object,default:null}},{init(){this.pointer=null,this.pointerComponent=null,this.keyboardComponent=null},start(){if(this.keyboardComponentName!=="")if(this.keyboardObject!==null){let o=this.keyboardObject.getComponent(this.keyboardComponentName);o===null?console.warn("keyboardObject has no component with name",this.keyboardComponentName):this.keyboardComponent=o}else console.warn("keyboardComponentName set in canvas-ui-keyboard-guard, but keyboardObject was not");if(this.pointerComponentName!=="")if(this.pointerObject!==null){let o=this.pointerObject.getComponent(this.pointerComponentName);if(o===null){console.warn("pointerObject has no component with name",this.pointerComponentName);return}if(this.cursorObject!==null){let e=this.cursorObject.getComponent("cursor");e===null?console.warn("cursorObject set in canvas-ui-keyboard-guard, but cursorObject has no cursor component"):(this.pointer=r.getPointerID(e),this.pointerComponent=o)}else console.warn("pointerObject set in canvas-ui-keyboard-guard, but cursorObject was not")}else console.warn("pointerComponentName set in canvas-ui-keyboard-guard, but pointerObject was not")},update(o){if(this.keyboardComponent!==null){let e=!r.keyboardDriver.needsInput;this.keyboardComponent.active=e}if(this.pointer!==null){let e=r.pointerDriver.getPointerHint(this.pointer)===_.None;this.pointerComponent.active=e}},onDeactivate(){this.keyboardComponent!==null&&(this.keyboardComponent.active=!0),this.pointerComponent!==null&&(this.pointerComponent.active=!0)}});WL.registerComponent("virtual-keyboard-ui-root",{material:{type:WL.Type.Material}},{init(){this.root=new g(this.object,this.material),this.forceDisabled=!1},update(o){this.root&&!this.forceDisabled&&(this.root.updateVisibility(),this.root.update())},onActivate(){this.root&&(this.forceDisabled=!1,this.root.enabled=!0)},onDeactivate(){this.root&&(this.forceDisabled=!0,this.root.enabled=!1)}});export{r as WLRoot,g as WLVirtualKeyboardRoot};
//# sourceMappingURL=index.esm.js.map
