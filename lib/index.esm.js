import{Root as x,PointerDriver as O,DOMKeyboardDriver as D,Theme as C}from"@rafern/canvas-ui";import{vec3 as j,mat4 as T}from"gl-matrix";var f=null,m=null,y=null,t=class extends x{static get pointerDriver(){return f===null&&(f=new O),f}static get keyboardDriver(){return m===null&&(m=new D,m.bindDOMElem(WL.canvas)),m}static get pointerIDs(){return y===null&&(y=new Map),y}static getPointerID(e){let n=t.pointerIDs,i=n.get(e);return typeof i=="undefined"&&(i=t.pointerDriver.registerPointer(),n.set(e,i)),i}constructor(e,n,i,o=new C,r=.01,s=1,u=!0,p=!0){super(i,h=>{WL.canvas.style.cursor=h},o);if(this.unitsPerPixel=r,this.meshObject=WL.scene.addObject(e),this.meshObject.active=!1,s!==null&&u&&this.registerDriver(t.pointerDriver),p&&this.registerDriver(t.keyboardDriver),this.mesh=this.meshObject.addComponent("mesh"),this.materialClone=n.clone(),this.mesh.material=this.materialClone,this.oldTexSize=[0,0],this._setupMesh(1,0),s!==null){this.collision=this.meshObject.addComponent("collision",{collider:WL.Collider.Box,extents:[1,1,.01],group:1<<s});let h=this.meshObject.addComponent("cursor-target"),c=new Float32Array(3),W=new Float32Array(3),g=new Float32Array(16),b=d=>(c.set(d.rayHit.locations[0]),T.invert(g,this.meshObject.transformWorld),j.transformMat4(c,c,g),console.log(c),[Math.min(Math.max((c[0]+1)/2,0),1),Math.min(Math.max(1-(c[1]+1)/2,0),1)]);console.warn("!!!!!!!!!!!!!!! library updated"),u&&(h.addUnHoverFunction((d,a)=>{t.pointerDriver.leavePointer(this,t.getPointerID(a))}),h.addMoveFunction((d,a)=>{t.pointerDriver.movePointer(this,t.getPointerID(a),...b(a),null,!1,!1,!1)}),h.addDownFunction((d,a)=>{t.pointerDriver.movePointer(this,t.getPointerID(a),...b(a),1,!1,!1,!1)}),h.addUpFunction((d,a)=>{t.pointerDriver.movePointer(this,t.getPointerID(a),...b(a),0,!1,!1,!1)}))}else this.collision=null;this.valid=!0}update(){if(!this.valid)return;this.preLayoutUpdate();let e=this.resolveLayout(),[n,i]=this.canvasDimensions;if(e){let[r,s]=this.dimensions;this.meshObject.resetScaling(),this.meshObject.scale([this.unitsPerPixel*r,this.unitsPerPixel*s,.01]),this.collision!==null&&(this.collision.extents=[this.meshObject.scalingWorld[0],this.meshObject.scalingWorld[1],.01]),this._setupMesh(r/n,1-s/i)}this.postLayoutUpdate();let o=this.paint();if(this.meshObject.active=this.enabled,!!o)if(this.oldTexSize[0]!==n||this.oldTexSize[1]!==i){this.oldTexSize[0]=n,this.oldTexSize[1]=i;let r=this.materialClone;this.texture=new WL.Texture(this.canvas),r.shader==="Flat Opaque Textured"||r.shader==="Flat Transparent Textured"?r.flatTexture=this.texture:r.shader=="Phong Opaque Textured"?r.diffuseTexture=this.texture:console.error("Shader",r.shader,"not supported by WLRoot")}else this.texture.update()}_setVertex(e,n,i,o,r,s,u,p,h,c){e.set([i,o,r,h,c,s,u,p],n*WL.Mesh.VERTEX_FLOAT_SIZE)}_setUV(e,n,i,o){e.set([i,o],n*WL.Mesh.VERTEX_FLOAT_SIZE+WL.Mesh.TEXCOORD.U)}_setupMesh(e,n){let i=new Uint8Array([0,3,1,0,2,3]),o=new Float32Array(4*WL.Mesh.VERTEX_FLOAT_SIZE);this._setVertex(o,0,-1,1,0,0,0,1,0,1),this._setVertex(o,1,1,1,0,0,0,1,e,1),this._setVertex(o,2,-1,-1,0,0,0,1,0,n),this._setVertex(o,3,1,-1,0,0,0,1,e,n),this.mesh.mesh=new WL.Mesh({indexData:i,indexType:WL.MeshIndexType.UnsignedByte,vertexData:o})}};import{VirtualKeyboard as w,defaultVirtualKeyboardTemplate as k,Theme as P,Margin as L}from"@rafern/canvas-ui";var v=class extends t{constructor(e,n,i=k,o=null,r=new P,s=.01,u=1,p=!0){o===null&&(o=t.keyboardDriver),super(e,n,new L(new w(o,i)),r,s,u,p,!1),this.keyboardDriver=o}updateVisibility(){!this.valid||(this.enabled=this.keyboardDriver.getFocusedRoot()!==null)}};import{PointerHint as M}from"@rafern/canvas-ui";WL.registerComponent("canvas-ui-input-guard",{keyboardComponentName:{type:WL.Type.String,default:""},keyboardObject:{type:WL.Type.Object,default:null},pointerComponentName:{type:WL.Type.String,default:""},pointerObject:{type:WL.Type.Object,default:null},cursorObject:{type:WL.Type.Object,default:null}},{init(){this.pointer=null,this.pointerComponent=null,this.keyboardComponent=null},start(){if(this.keyboardComponentName!=="")if(this.keyboardObject!==null){let l=this.keyboardObject.getComponent(this.keyboardComponentName);l===null?console.warn("keyboardObject has no component with name",this.keyboardComponentName):this.keyboardComponent=l}else console.warn("keyboardComponentName set in canvas-ui-keyboard-guard, but keyboardObject was not");if(this.pointerComponentName!=="")if(this.pointerObject!==null){let l=this.pointerObject.getComponent(this.pointerComponentName);if(l===null){console.warn("pointerObject has no component with name",this.pointerComponentName);return}if(this.cursorObject!==null){let e=this.cursorObject.getComponent("cursor");e===null?console.warn("cursorObject set in canvas-ui-keyboard-guard, but cursorObject has no cursor component"):(this.pointer=t.getPointerID(e),this.pointerComponent=l)}else console.warn("pointerObject set in canvas-ui-keyboard-guard, but cursorObject was not")}else console.warn("pointerComponentName set in canvas-ui-keyboard-guard, but pointerObject was not")},update(l){if(this.keyboardComponent!==null){let e=t.keyboardDriver.getFocusedRoot()===null;this.keyboardComponent.active=e}if(this.pointer!==null){let e=t.pointerDriver.getPointerHint(this.pointer)===M.None;this.pointerComponent.active=e}},onDeactivate(){this.keyboardComponent!==null&&(this.keyboardComponent.active=!0),this.pointerComponent!==null&&(this.pointerComponent.active=!0)}});WL.registerComponent("virtual-keyboard-ui-root",{material:{type:WL.Type.Material}},{init(){this.root=new v(this.object,this.material),this.forceDisabled=!1},update(l){this.root&&!this.forceDisabled&&(this.root.updateVisibility(),this.root.update())},onActivate(){this.root&&(this.forceDisabled=!1,this.root.enabled=!0)},onDeactivate(){this.root&&(this.forceDisabled=!0,this.root.enabled=!1)}});export{t as WLRoot,v as WLVirtualKeyboardRoot};
//# sourceMappingURL=index.esm.js.map
